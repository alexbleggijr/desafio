@use 'sass:color';

@mixin generate-custom-property($hsl, $name, $lightness) {
  $hue: color.hue($hsl);
  $saturation: color.saturation($hsl);

  @for $i from 1 through length($lightness) {
    $index: if($i <= 10, $i, (($i - 10) * 10 + 5));

    $color: hsl($hue, $saturation, nth($lightness, $i));
    --ds-color-#{$name}-#{$index}: #{$color};
  }
}

@mixin generate-custom-property-feedback($hsl, $name, $hue) {
  $lightness: color.lightness($hsl);
  $saturation: color.saturation($hsl);

  @for $i from 1 through length($hue) {
    $color: hsl(nth($hue, $i), $saturation, $lightness);
    --ds-color-#{nth($name, $i)}: #{$color};
  }
}

@mixin generate-variable($name, $lightness){
  @for $i from 1 through length($lightness) {
    $index: if($i <= 10, $i, (($i - 10) * 10 + 5));
    $text-color: if($i == 1, var(--ds-color-neutral-10), var(--ds-color-neutral-1));

    :host([color=#{$name}-#{$index}]){
      // --ds-color-#{$name}: var(--ds-color-#{$name}-#{$i});
      --ds-color-background: var(--ds-color-#{$name}-#{$index});
      --ds-color-text: #{$text-color};
    }
  }
}

@mixin generate-variable-feedback($name, $lightness){
  @for $i from 1 through length($lightness) {
    :host([color=#{nth($name, $i)}]){
      // --ds-color-#{$name}: var(--ds-color-#{$name}-#{$i});
      --ds-color-background: var(--ds-color-#{nth($name, $i)});
    }
  }
}


